on:
  workflow_dispatch:
  push:
    branches:
    - main
    
jobs:
  my_job:
    name: test python and push terraform
    permissions:
      id-token: write
      contents: write
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3 
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@master
      with:
        aws-region: ${{ secrets.AWS_SECRET_ACCESS_REGION }}
        role-to-assume: arn:aws:iam::${{ secrets.AWS_SECRET_ACCESS_ACCOUNT_ID }}:role/${{ secrets.AWS_SECRET_ACCESS_GITUB_RUNNER_ROLE }}
        role-session-name: GithubActionsSession
    - run: aws sts get-caller-identity
    - name: Setup terraform
      env:
        TF_VAR_region: ${{ secrets.AWS_SECRET_ACCESS_REGION }}
        TF_VAR_account_id: ${{ secrets.AWS_SECRET_ACCESS_ACCOUNT_ID }}
        TF_VAR_table_name: ${{ secrets.AWS_SECRET_ACCESS_TABLE_NAME }}
      uses: hashicorp/setup-terraform@v2.0.3    
    - run: terraform init
    - id: plan
      env:
        TF_VAR_region: ${{ secrets.AWS_SECRET_ACCESS_REGION }}
        TF_VAR_account_id: ${{ secrets.AWS_SECRET_ACCESS_ACCOUNT_ID }}
        TF_VAR_table_name: ${{ secrets.AWS_SECRET_ACCESS_TABLE_NAME }}
      run: terraform plan -no-color -input=false
        working-directory:${{GITHUB_WORKSPACE}}
    - run: echo ${{ steps.plan.outputs.stdout }}
    - run: echo ${{ steps.plan.outputs.stderr }}
    - run: echo ${{ steps.plan.outputs.exitcode }}
    - id: apply
      run: terraform apply -auto-approve
      
    
